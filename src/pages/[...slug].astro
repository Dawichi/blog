---
import { type CollectionEntry, getCollection } from 'astro:content'
import Layout from '../layouts/Layout.astro'
import FormattedDate from '../components/FormattedDate.astro'

// Fetch the post data to build static paths
export async function getStaticPaths() {
    const posts = await getCollection('blog')
    return posts.map(post => ({
        params: { slug: post.slug },
        props: post,
    }))
}
type Props = CollectionEntry<'blog'>

const post = Astro.props
const { title, description, pubDate, heroImage } = post.data

const { Content } = await post.render()
---

<Layout title={title} description={description}>
    <div class='container mx-auto h-[50vh] border border-x-0 border-t-0 bg-cover bg-center' style={{ backgroundImage: `url(${heroImage})` }}></div>

    <!-- TOC: hidden under 'xl:' -->
    <div class='sticky top-0'>
        <div class='left-4 top-8 mt-8 hidden xl:absolute xl:block'>
            <p class='py-1 font-bold tracking-wider'>Table of contents</p>
            <hr class='pb-2' />
            <ul id='table-of-contents'></ul>
        </div>
    </div>

    <article class='dw-blog-article mx-auto max-w-5xl px-4 pb-20 pt-8 xl:mx-0 xl:ml-auto 2xl:mx-auto'>
        <FormattedDate date={pubDate} />
        <div class='container mx-auto'>
            <h1>{post.data.title}</h1>
            <Content />
        </div>
    </article>
</Layout>

<script is:inline>
/**
 * This script is responsible for generating the table of contents for the posts
 */
// each time the page is swapped by the ViewTransitions API, run the TOC generator
// document.addEventListener('astro:after-swap', generateTableOfContents)

// and each time the page is loaded
generateTableOfContents()

function generateTableOfContents() {
    // if the current page is not a blog post, do nothing
    if (!document.getElementsByClassName('dw-blog-article').length) return

    // if the current page already has a TOC, do nothing
    if (document.getElementById('table-of-contents').childElementCount) return

    // create the TOC
    const toc = document.getElementById('table-of-contents')
    document
        .getElementsByClassName('dw-blog-article')[0] // get the article
        .querySelectorAll('h2, h3') // get all subheadings
        .forEach(k => {
            // create a link inside toc
            const li = document.createElement('li')
            const a = document.createElement('a')

            a.href = '#' + k.id
            a.innerText = k.innerText

            const margins = {
                H2: '0rem',
                H3: '1rem',
            }

            a.style.marginLeft = margins[k.nodeName]
            a.className = 'hover:underline p-2'
            li.style.paddingBottom = '0.5rem'

            // add the link to the TOC
            li.appendChild(a)
            toc.appendChild(li)
        })
}
</script>
